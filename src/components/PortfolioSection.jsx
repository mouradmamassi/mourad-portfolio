import React from "react";
import sgLogo from "/images/sg.png";

// Donn√©es des projets
const projects = [
  {
    title: "Ego ‚Äî Gestion des Mod√®les Risque-Cr√©dit",
    description: `
      Plateforme web de gestion et de d√©finition des mod√®les de risque-cr√©dit pour la Direction Risque et Cr√©dit. En tant que Tech Lead, j'ai g√©r√© le cycle de vie complet du projet (conception, d√©veloppement et mise en production) et assur√© l'automatisation des processus DevOps. Le frontend, d√©velopp√© en React, offre une interface intuitive aux utilisateurs. L'infrastructure est provisionn√©e via IaC avec AWS CloudFormation CDK (Java).
    `,
    technologies: [
      "Spring Boot 3",
      "JAVA 21",
      "AWS ECS",
      "AWS S3",
      "AWS RDS",
      "Docker",
      "Jenkins",
      "CloudFormation CDK (Java)",
      "React"
    ],
    period: "Jan 2024 ‚Äì Aujourd‚Äôhui",
    logoType: "socgen"
  },
  {
    title: "Hammer ‚Äî Moteur de Calcul Risque-Cr√©dit",
    description: `
      Syst√®me backend d‚Äôex√©cution des mod√®les de risque de cr√©dit d√©finis dans Ego. Ce moteur g√®re √† la fois le calcul en temps r√©el (Loki) et le traitement de millions de contrats en mode batch (Drax). J'ai men√© le projet en mode DevOps complet, de l'automatisation CI/CD √† la supervision en production, en utilisant une librairie Jenkins interne et AWS CloudFormation CDK pour l'IaC. La partie batch est r√©alis√©e via un workflow AWS Step Functions avec gestion de rollback et de retry.
    `,
    technologies: [
      "Spring Boot  3",
      "JAVA 21",
      "AWS Step Functions",
      "AWS ECS",
      "AWS S3",
      "Docker",
      "Jenkins",
      "CloudFormation CDK (Java)",
    ],
    period: "Jan 2024 ‚Äì Aujourd‚Äôhui",
    logoType: "socgen"
  },
  {
    title: "SelfCare Mon√©tique",
    description: `
      Application bancaire critique utilis√©e par environ 8 millions de clients pour g√©rer leurs services de carte en toute autonomie : opposition, augmentation des plafonds, etc. Ce projet a exig√© un haut niveau de s√©curit√©, de disponibilit√© et de performance, en s'int√©grant aux syst√®mes mon√©tiques nationaux.
    `,
    technologies: ["Spring Boot 2.0", "React 18", "JAVA 11", "Cloud Interne"],
    period: "2020 ‚Äì 2023",
    logoType: "socgen"
  },
  {
    title: "Enr√¥lement Apple Pay",
    description: `
      Application backend essentielle pour permettre aux clients d‚Äôenr√¥ler leur carte bancaire sur Apple Pay. Le syst√®me v√©rifie l‚Äô√©ligibilit√© du client en se basant sur de nombreuses r√®gles de gestion pour garantir la s√©curit√©, la conformit√© et une exp√©rience utilisateur optimale pour les paiements mobiles.
    `,
    technologies: ["Spring Boot 2",  "JAVA 11", "Cloud Interne"],
    period: "2020 ‚Äì 2023",
    logoType: "socgen"
  },
  {
    title: "Gestion Cl√©s Cryptographiques",
    description: `
      Outil de description et de g√©n√©ration des cl√©s pour la mon√©tique bancaire, avec une architecture cloud s√©curis√©e. J'ai particip√© au d√©veloppement du backend (Spring Boot, Java) et du frontend (Angular), avec un d√©ploiement s√©curis√© sur AWS via Docker.
    `,
    technologies: ["Spring Boot 2",  "JAVA 11", "Angular", "AWS", "Docker"],
    period: "2020 ‚Äì 2023",
    logoType: "socgen"
  }
];

// Donn√©es de la formation
const education = [
  {
    diploma: "Ing√©nieur en Informatique",
    institution: "Universit√© de Technologie de Belfort-Montb√©liard",
    period: "2016 - 2020",
    logoType: "utbm"
  },
  {
    diploma: "Ing√©nieur Civil en Informatique, Semestre d'√©change",
    institution: "Universit√© de Li√®ge",
    period: "2018 - 2019",
    logoType: "uliege"
  },
  {
    diploma: "Licence en informatique",
    institution: "Universit√© Le Havre Normandie",
    period: "2015 - 2016",
    logoType: "other"
  },
  {
    diploma: "Licence professionnelle, Logiciel et D√©veloppement Web",
    institution: "√âcole normale sup√©rieure - Maroc",
    period: "2014 - 2015",
    logoType: "other"
  },
  {
    diploma: "DUT , G√©nie Informatique",
    institution: "√âcole Sup√©rieure de Technologie - Maroc",
    period: "2012 - 2014",
    logoType: "other"
  },
  {
    diploma: "Baccalaur√©at, Science Physique",
    institution: "Maghreb Al Arabie - Maroc",
    period: "2011 - 2012",
    logoType: "other"
  },
];

// Fonction pour rendre le bon logo bas√© sur le type
const renderLogo = (logoType) => {
  let logoSrc = "";
  let altText = "";

  // D√©finir l'URL et le texte alternatif en fonction du type de logo
  switch (logoType) {
    case "socgen":
      // Remplacez cette URL par le logo officiel de la Soci√©t√© G√©n√©rale si vous l'avez
      logoSrc = "/images/sg.png";
      altText = "Logo Soci√©t√© G√©n√©rale";
      break;
    case "utbm":
      // Remplacez cette URL par le logo officiel de l'UTBM
      logoSrc = "https://placehold.co/100x100/1e40af/ffffff?text=UTBM";
      altText = "Logo UTBM";
      break;
    case "uliege":
      // Remplacez cette URL par le logo officiel de l'Universit√© de Li√®ge
      logoSrc = "https://placehold.co/100x100/4c4980/ffffff?text=ULg";
      altText = "Logo Universit√© de Li√®ge";
      break;
    default:
      // URL d'une image g√©n√©rique pour les autres institutions
      logoSrc = "https://placehold.co/100x100/6b7280/ffffff?text=üéì";
      altText = "Logo d'√©ducation";
      break;
  }

  // Retourner la balise <img>
  return <img src={logoSrc} alt={altText} className="h-6 w-6 md:h-8 md:w-8" />;
};

export default function PortfolioPage() {
  return (
    <>
      {/* Section des projets principaux - En mode timeline */}
      <section className="py-16 bg-gray-50">
        <div className="container mx-auto px-6">
          <h2 className="text-3xl font-bold text-center mb-12 text-gray-800">Mes projets principaux</h2>
          <div className="relative">
            {/* Ligne verticale de la timeline */}
            <div className="absolute left-1/2 -translate-x-1/2 w-1 bg-gray-300 h-full hidden md:block"></div>

            {projects.map((project, index) => (
              <div
                key={index}
                className="mb-8 flex flex-col md:flex-row justify-between items-center w-full odd:flex-row-reverse"
              >
                <div className="w-full md:w-1/2 text-center md:text-left md:pr-12 md:pl-0 odd:text-right odd:pr-0 odd:pl-12">
                  <div className="bg-white p-6 rounded-2xl shadow-md transition-shadow hover:shadow-lg">
                    <h3 className="text-xl font-semibold text-gray-900">{project.title}</h3>
                    <p className="mt-4 text-gray-700 whitespace-pre-line">{project.description}</p>
                    <p className="mt-4 text-sm text-gray-500">P√©riode : {project.period}</p>
                    <div className="mt-4 flex flex-wrap gap-2">
                      {project.technologies.map((tech, idx) => (
                        <span
                          key={idx}
                          className="bg-blue-100 text-blue-800 text-sm px-3 py-1 rounded-full"
                        >
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>
                </div>
                {/* Logo sur la timeline pour les projets */}
                <div className="absolute md:relative z-10 w-12 h-12 rounded-full bg-white flex items-center justify-center -mt-4 md:mt-0 shadow-lg">
                  {renderLogo("item.logoType")}
                </div>
                <div className="w-full md:w-1/2 text-center md:text-left md:pl-12 md:pr-0"></div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Section de la formation en timeline */}
      <section className="py-16 bg-white">
        <div className="container mx-auto px-6">
          <h2 className="text-3xl font-bold text-center mb-12 text-gray-800">Mon parcours acad√©mique</h2>
          <div className="relative">
            {/* Ligne verticale de la timeline */}
            <div className="absolute left-1/2 -translate-x-1/2 w-1 bg-gray-200 h-full hidden md:block"></div>

            {education.map((item, index) => (
              <div
                key={index}
                className="mb-8 flex flex-col md:flex-row justify-between items-center w-full odd:flex-row-reverse"
              >
                {/* Le point sur la timeline */}
                <div className="w-full md:w-1/2 text-center md:text-left md:pr-12 md:pl-0">
                  <div className="bg-gray-100 p-6 rounded-2xl shadow-md transition-shadow hover:shadow-lg">
                    <h3 className="text-xl font-semibold text-gray-900">{item.diploma}</h3>
                    <p className="text-gray-700 mt-1">{item.institution}</p>
                    <p className="text-sm text-gray-500 mt-2">{item.period}</p>
                  </div>
                </div>
                <div className="absolute md:relative z-10 w-12 h-12 rounded-full bg-white flex items-center justify-center -mt-4 md:mt-0 shadow-lg">
                  {renderLogo(item.logoType)}
                </div>
                <div className="w-full md:w-1/2 text-center md:text-left md:pl-12 md:pr-0"></div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </>
  );
}
